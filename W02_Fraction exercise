#include<iostream>
using namespace std;

class Fraction
{
public:
    Fraction(int num);
    Fraction();
    Fraction(int num1, int num2);
    void output();
    bool equal(Fraction num2);
    void simplify();
private:
    int num1, num2;
};

Fraction::Fraction(int num)
{
    num1 = 1;
    num2 = num;
}

Fraction::Fraction()
{
    num1 = num2 = 0;
}

Fraction::Fraction(int numa, int numb)
{
    num1 = numa;
    num2 = numb;
}

void Fraction::output()
{
    cout << num1 << "/" << num2;
}

bool Fraction::equal(Fraction numb)
{
    numb.simplify();
    if (numb.num1==num1&&numb.num2==num2)
        return true;
    else
        return false;
}

void Fraction:: simplify()
{
    if(num2>num1)
    {
        for(int i=num2;i>1;i--)
        {
            if(num1%i==0&&num2%i==0)
            {
                num1=num1/i;
                num2=num2/i;
            }
        }
    }
    else if(num1<num2)
    {
        for(int i=num1;i>1;i--)
        {
            if(num1%i==0&&num2%i==0)
            {
                num1=num1/i;
                num2=num2/i;
            }
        }
    }
    else
    {
        num1=1;
        num2=1;
    }
}


int main()
{
    Fraction num1(3), num2(6), num3, num4;
    num3 = Fraction(4, 12);
    num4 = Fraction(2, 12);
    cout << "num1 is ";
    num1.output();
    cout<<endl;
    cout << "num2 is ";
    num2.output();
    cout<<endl;
    cout << "num3 is ";
    num3.output();
    cout<<endl;
    cout << "num4 is ";
    num4.output();
    cout<<endl;
    if (num1.equal(num2))
        cout << "num1 and num2 are equal!" << endl;

    num3.simplify();
    cout << "After simplifying, num3 is ";
    num3.output();
    cout<<endl;
    if (num2.equal(num4))
        cout << "num2 and num4 are equal!" << endl;
    return 0;
}
/* The output of the above testing code is as follows:
num1 is 1/3
num2 is 1/6
num3 is 4/12
num4 is 2/12
After simplifying, num3 is 1/3
num2 and num4 are equal!*/
